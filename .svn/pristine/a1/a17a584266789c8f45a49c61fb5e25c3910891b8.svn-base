package snake.game.objects;

import processing.core.PApplet;
import snake.game.OnCollide;
import snake.game.OnDraw;
import snake.game.Spiel;
import snake.game.Spielfenster;

import java.awt.Point;
import java.util.Arrays;
import java.util.List;

public class Apfel implements OnDraw, OnCollide {

	private Point position;
	private List<OnCollide> objects;
	private Spiel game;
	public Apfel(Point position){
		this.position = position;
		objects= Arrays.asList(new OnCollide[]{this});
	}
	public Apfel(Point p, Spiel game) {
		this(p);
		this.game = game;
		
	}
 
	public void onDraw(Spielfenster window, float scale, int actual_tile_dimension) {
		window.fill(120, 100, 100);
		window.noStroke();

		Point draw_to = Spielfenster.kachel_nach_pixel(position, scale);

		window.rect(draw_to.x, draw_to.y, Spielfenster.standard_tile * scale,
				Spielfenster.standard_tile * scale);

	}

	@Override
	public boolean onCollide(OnCollide colliding) {
		// TODO Auto-generated method stub
		game.punktezahlerhoehen();
		game.unregisterObject(this);
		game.createApple();
		return true;
	}

	@Override
	public List<OnCollide> getobjects() {
		// TODO Auto-generated method stub
		return objects;
	}

	@Override
	public Point getposition() {
		// TODO Auto-generated method stub
		return position;
	}
	
	
}
